/* DO NOT EDIT THIS FILE - it is machine generated */
#include "com_example_ndkdemo_CounterNative.h"
#include <jni.h>

jclass m_class;
jobject m_object;
jmethodID m_mid_static, m_mid;

JNIEXPORT void JNICALL
Java_com_example_ndkdemo_CounterNative_nativeSetup
  (JNIEnv *env, jobject thiz){
    jclass clazz=(env)->GetObjectClass(thiz);
    m_class=(jclass)(env)->NewGlobalRef(clazz);
    m_object=(jobject)(env)->NewGlobalRef(thiz);
    m_mid_static=(env)->GetStaticMethodID(m_class, "setValue", "(I)V");
    m_mid=(env)->GetMethodID(m_class, "setV", "(I)V");
  };

/*
 * Class:     com_example_ndkdemo_CounterNative
 * Method:    nativeExecute
 * Signature: (I)V
 */
JNIEXPORT void JNICALL
Java_com_example_ndkdemo_CounterNative_nativeExecute
  (JNIEnv *env, jclass clazz, jint n){
    int i, sum=0;
    for(i=0; i<n; i++){
        sum+=i;
    }
    (env)->CallVoidMethod(m_object, m_mid, sum);
  };

/*
 * Class:     com_example_ndkdemo_CounterNative
 * Method:    nativeExe
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_com_example_ndkdemo_CounterNative_nativeExe
  (JNIEnv *env, jobject thiz, jint n){
    int i, sum=0;
    for(i=0; i<n; i++){
        sum+=i;
    }
    (env)->CallStaticVoidMethod(m_class, m_mid_static, sum);
  };

