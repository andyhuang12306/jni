/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
#include "com_example_ndkdemo_CounterNative3.h"
#include "com_example_ndkdemo_NativeExcute.h"

/* Header for class com_example_ndkdemo_CounterNative3 */
class Counter{
public:
    int n;
    long jobj;

public:
    Counter(){};
    int execute(){
        int i, sum=0;
        for(i=0; i<n; i++){
            sum+=i;
        }
        return sum;
    }
};


JNIEXPORT void JNICALL
Java_com_example_ndkdemo_CounterNative3_nativeSetup
(JNIEnv *env, jobject thiz){
    jclass clazz=(env)->GetObjectClass(thiz);
    jfieldID fid=(jfieldID)(env)->GetFieldID(clazz, "cObj", "J");
    Counter *counter=new Counter();
    env->SetLongField(thiz, fid, (jlong)counter);
    jobject gThiz=(jobject)(env)->NewGlobalRef(thiz);
    counter->jobj= (long)gThiz;
};


JNIEXPORT jint JNICALL
Java_com_example_ndkdemo_NativeExcute_execute
(JNIEnv *env, jobject thiz, jlong cobj){
    Counter *counter= (Counter *)cobj;
    jobject jo=(jobject)counter->jobj;
    jclass clazz=(jclass)env->GetObjectClass(jo);
    jmethodID mid=env->GetMethodID(clazz, "getNumb", "()I");
    int num=(int)env->CallIntMethod(jo, mid);
    counter->n=num;
    return (jint)counter->execute();
};

